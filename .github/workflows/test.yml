# Jest テストを実行し、結果をSlackに通知するワークフロー
name: Jest Tests and Notify Slack

on:
  workflow_dispatch:  # 手動でワークフローを実行するためのトリガー

jobs:
  test:
    runs-on: ubuntu-latest  # Ubuntu最新版の仮想環境で実行
    environment: dev  # 環境変数やシークレットを取得する環境を指定

    steps:
    - name: Checkout code  # リポジトリのコードをチェックアウト
      uses: actions/checkout@v4
    
    - name: Set up Node.js  # Node.js環境のセットアップ
      uses: actions/setup-node@v4
      with:
        node-version: '20'  # Node.js v20を使用
        cache: 'npm'  # npmのキャッシュを有効化してビルド高速化
        
    - name: Install dependencies  # 依存パッケージのインストール
      run: npm ci  # クリーンインストール（package-lock.jsonを厳密に使用）
      
    - name: Build TypeScript  # TypeScriptのビルドプロセス実行
      run: npm run build
      
    - name: Run tests  # Jestテストの実行
      run: npm test
      
    - name: Slack Notification  # テスト結果をSlackに通知
      uses: rtCamp/action-slack-notify@v2 # Slack通知用のアクション
      if: always()  # テストの成功/失敗に関わらず常に通知を送信
      env:
        SLACK_WEBHOOK: ${{ vars.SLACK_WEBHOOK_URL }}  # SlackのWebhook URL（環境変数から取得）
        SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}  # 成功時は緑、失敗時は赤
        SLACK_USERNAME: GitHub Actions Notifier  # 通知の送信者名
        SLACK_TITLE: "${{ job.status == 'success' && ':white_check_mark:' || ':x:' }} テスト結果：${{ job.status == 'success' && '成功' || '失敗' }}"  # 通知タイトル
        SLACK_MESSAGE: |  # 通知本文
          *リポジトリ:* ${{ github.repository }}
          *ブランチ:* ${{ github.ref_name }}
          *実行者:* ${{ github.actor }}

          <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|ワークフロー詳細> 
        SLACK_FOOTER: ""  # フッターは空に設定
        MSG_MINIMAL: "false"  # リファレンスとイベント情報を非表示に設定